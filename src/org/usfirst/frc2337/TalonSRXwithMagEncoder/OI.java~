// RobotBuilder Version: 2.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


package org.usfirst.frc2337.TalonSRXwithMagEncoder;

import org.usfirst.frc2337.TalonSRXwithMagEncoder.commands.*;
import edu.wpi.first.wpilibj.smartdashboard.SmartDashboard;
import edu.wpi.first.wpilibj.Joystick;
import org.usfirst.frc2337.TalonSRXwithMagEncoder.subsystems.*;
import edu.wpi.first.wpilibj.buttons.*;


/**
 * This class is the glue that binds the controls on the physical operator
 * interface to the commands and command groups that allow control of the robot.
 */
public class OI {
    //// CREATING BUTTONS
    // One type of button is a joystick button which is any button on a joystick.
    // You create one by telling it which joystick it's on and which button
    // number it is.
    // Joystick stick = new Joystick(port);
    // Button button = new JoystickButton(stick, buttonNumber);

    // There are a few additional built in buttons you can use. Additionally,
    // by subclassing Button you can create custom triggers and bind those to
    // commands the same as any other Button.

    //// TRIGGERING COMMANDS WITH BUTTONS
    // Once you have a button, it's trivial to bind it to a button in one of
    // three ways:

    // Start the command when the button is pressed and let it run the command
    // until it is finished as determined by it's isFinished method.
    // button.whenPressed(new ExampleCommand());

    // Run the command while the button is being held down and interrupt it once
    // the button is released.
    // button.whileHeld(new ExampleCommand());

    // Start the command when the button is released  and let it run the command
    // until it is finished as determined by it's isFinished method.
    // button.whenReleased(new ExampleCommand());


    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
    public JoystickButton green_A;
    public JoystickButton red_B;
    public JoystickButton blue_X;
    public JoystickButton yellow_Y;
    public JoystickButton left_Bumper;
    public JoystickButton right_Bumper;
    public JoystickButton back_Button;
    public JoystickButton start_Button;
    public JoystickButton left_Stick_Hat;
    public JoystickButton right_Stick_Hat;
    public Joystick joystick;

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS

    public OI() {
        // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS

        joystick = new Joystick(0);
        
        right_Stick_Hat = new JoystickButton(joystick, 10);
        right_Stick_Hat.whenPressed(new DoNothing());
        left_Stick_Hat = new JoystickButton(joystick, 9);
        left_Stick_Hat.whenPressed(new DoNothing());
        start_Button = new JoystickButton(joystick, 8);
        start_Button.whenPressed(new DoNothing());
        back_Button = new JoystickButton(joystick, 7);
        back_Button.whenPressed(new DoNothing());
        right_Bumper = new JoystickButton(joystick, 6);
        right_Bumper.whenPressed(new DoNothing());
        left_Bumper = new JoystickButton(joystick, 5);
        left_Bumper.whenPressed(new DoNothing());
        yellow_Y = new JoystickButton(joystick, 4);
        yellow_Y.whenPressed(new DoNothing());
        blue_X = new JoystickButton(joystick, 3);
        blue_X.whenPressed(new DoNothing());
        red_B = new JoystickButton(joystick, 2);
        red_B.whenPressed(new DoNothing());
        green_A = new JoystickButton(joystick, 1);
        green_A.whenPressed(new DoNothing());


        // SmartDashboard Buttons
        SmartDashboard.putData("Autonomous Command", new AutonomousCommand());
        SmartDashboard.putData("DoNothing", new DoNothing());

        // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS
    }

    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=FUNCTIONS
    public Joystick getJoystick() {
        return joystick;
    }


    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=FUNCTIONS
}

